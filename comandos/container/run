docker container run --help

Run a command in a new container
obs: tem vários outros parâmetros além dos listados aqui.


-p
--publish list
Publish a container's port(s) to the host
docker container run -p hostPort:containerPort nginx

docker container run --publish 80:80 nginx
docker container run -p 80:80 nginx
http://localhost/ ou http://localhost:80

docker container run -p 8090:80 nginx
http://localhost:8090


-d
--detach
Run container in background and print container ID - o terminal do pc fica livre.
docker container run --publish 80:80 -d nginx
docker container run --publish 80:80 --detach nginx


--name string
Assign a name to the container

docker container run --publish 80:80 --detach --name webhost nginx
Inicia a image do nginx com o nome "webhost"

-e
environment - variável de ambiente
docker container rm -f nginx-teste
docker container run -p 80:80 -d --name nginx-teste -e MY_VAR="hello world" nginx
docker container exec -it nginx-teste bash
echo $MY_VAR   // hello world


-it
/*
  -i --interactive
    Keep STDIN open even if not attached
    keep session open to receive terminal input
  -t --tty   Allocate a pseudo-TTY   (pseudo-tty)
    simulates a real terminal, like what ssh does
    bash (shell)
    if run with -it, it will give you a terminal inside the running container

  acessar o terminal do container
*/
docker container run -it --name nginx-teste nginx bash



--network network                Connect a container to a network
olhar o exemplo: .../docker/comandos/docker/network
olhar também: docker network create
