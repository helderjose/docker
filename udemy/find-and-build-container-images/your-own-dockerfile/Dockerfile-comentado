
# Imagem a ser usada
FROM node:6-alpine

/*
this app listens on port 3000, but the container should launch on port 80
so it will respond to http://localhost:80 on your computer.
Ex:
docker container run --rm -p 80:3000 testnode
80 é a porta no host
3000 é a porta no container
*/
EXPOSE 3000


/*
then it should use alpine package manager to install tini: 'apk add --update tini'
OBS: não sei o que o tini faz.
parece que é isso:
https://github.com/krallin/tini
A tiny but valid `init` for containers
*/
RUN apk add --update tini



/*
then it should create directory /usr/src/app for app files with 'mkdir -p /usr/src/app'
*/
RUN mkdir -p /usr/src/app



/* Node uses a "package manager", so it needs to copy in package.json file */
WORKDIR /usr/src/app
COPY package.json package.json


/*
- then it needs to run 'npm install' to install dependencies from that file
- to keep it clean and small, run 'npm cache clean --force' after above
*/
RUN npm install && npm cache clean



/*
then it needs to copy in all files from current directory
*/
COPY . .



/*
then it needs to start container with command '/sbin/tini -- node ./bin/www'
*/
CMD [ "tini", "--", "node", "./bin/www" ]

# - in the end you should be using FROM, RUN, WORKDIR, COPY, EXPOSE, and CMD commands


